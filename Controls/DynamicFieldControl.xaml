<UserControl x:Class="WeighbridgeSoftwareYashCotex.Controls.DynamicFieldControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <UserControl.Resources>
        <!-- Field Container Style -->
        <Style x:Key="FieldContainerStyle" TargetType="StackPanel">
            <Setter Property="Margin" Value="0,0,0,16"/>
        </Style>

        <!-- Label Style -->
        <Style x:Key="FieldLabelStyle" TargetType="TextBlock">
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="#2C3E50"/>
            <Setter Property="Margin" Value="0,0,0,6"/>
        </Style>

        <!-- Input Style -->
        <Style x:Key="ModernInputStyle" TargetType="Control">
            <Setter Property="Padding" Value="12"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#BDC3C7"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="Height" Value="44"/>
        </Style>

        <!-- TextBox Style -->
        <Style x:Key="ModernTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource ModernInputStyle}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="6">
                            <ScrollViewer x:Name="PART_ContentHost" Margin="{TemplateBinding Padding}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="#3498DB"/>
                                <Setter Property="BorderThickness" Value="2"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="#85C1E9"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- ComboBox Style -->
        <Style x:Key="ModernComboBoxStyle" TargetType="ComboBox" BasedOn="{StaticResource ModernInputStyle}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="6">
                                <Grid>
                                    <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False"
                                                    Content="{TemplateBinding SelectionBoxItem}"
                                                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                    Margin="{TemplateBinding Padding}"
                                                    VerticalAlignment="Center"
                                                    HorizontalAlignment="Left"/>
                                    <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}"
                                           Background="Transparent" BorderThickness="0"
                                           Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                                    <ToggleButton x:Name="ToggleButton" Grid.Column="2"
                                                ClickMode="Press" Focusable="false"
                                                IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                Background="Transparent" BorderThickness="0"
                                                HorizontalAlignment="Right" Width="30">
                                        <Path Data="M 0 0 L 4 4 L 8 0 Z" Fill="#7F8C8D" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </ToggleButton>
                                </Grid>
                            </Border>
                            <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}"
                                   AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                                <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                      MinWidth="{TemplateBinding ActualWidth}">
                                    <Border Background="White" BorderBrush="#BDC3C7" BorderThickness="1" CornerRadius="6">
                                        <ScrollViewer>
                                            <StackPanel IsItemsHost="True"/>
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" Value="#3498DB"/>
                                <Setter Property="BorderThickness" Value="2"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" Value="#85C1E9"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- CheckBox Style -->
        <Style x:Key="ModernCheckBoxStyle" TargetType="CheckBox">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="#2C3E50"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <StackPanel Orientation="Horizontal">
                            <Border x:Name="CheckBoxBorder" Width="20" Height="20" Background="White"
                                    BorderBrush="#BDC3C7" BorderThickness="2" CornerRadius="4" Margin="0,0,8,0">
                                <Path x:Name="CheckMark" Data="M 3 7 L 8 12 L 17 3" Stroke="#2196F3" StrokeThickness="2"
                                      Visibility="Collapsed" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <ContentPresenter VerticalAlignment="Center"/>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="#2196F3"/>
                                <Setter TargetName="CheckBoxBorder" Property="Background" Value="#E3F2FD"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="CheckBoxBorder" Property="BorderBrush" Value="#85C1E9"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Validation Error Template -->
        <ControlTemplate x:Key="ValidationErrorTemplate">
            <StackPanel>
                <AdornedElementPlaceholder/>
                <TextBlock Text="{Binding [0].ErrorContent}" Foreground="#E74C3C" FontSize="12" Margin="0,4,0,0"/>
            </StackPanel>
        </ControlTemplate>
    </UserControl.Resources>

    <StackPanel Style="{StaticResource FieldContainerStyle}">
        <!-- Field Label -->
        <StackPanel Orientation="Horizontal">
            <TextBlock Text="{Binding Label}" Style="{StaticResource FieldLabelStyle}"/>
            <TextBlock Text="*" Foreground="#E74C3C" FontWeight="Bold" Margin="2,0,0,0" 
                       Visibility="{Binding IsRequired, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        </StackPanel>

        <!-- Dynamic Field Content -->
        <ContentPresenter x:Name="FieldContent" Validation.ErrorTemplate="{StaticResource ValidationErrorTemplate}"/>

        <!-- Field Description -->
        <TextBlock Text="{Binding Description}" FontSize="12" Foreground="#7F8C8D" 
                   Margin="0,4,0,0" TextWrapping="Wrap"
                   Visibility="{Binding Description, Converter={StaticResource StringToVisibilityConverter}}"/>
    </StackPanel>
</UserControl>